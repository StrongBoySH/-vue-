{"remainingRequest":"D:\\phpStudy\\PHPTutorial\\WWW\\vue\\object - 副本\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\phpStudy\\PHPTutorial\\WWW\\vue\\object - 副本\\node_modules\\vant-ui\\components\\ui-datetime\\ui-datetime.vue?vue&type=style&index=0&id=446854f0&lang=scss&scoped=true&","dependencies":[{"path":"D:\\phpStudy\\PHPTutorial\\WWW\\vue\\object - 副本\\node_modules\\vant-ui\\components\\ui-datetime\\ui-datetime.vue","mtime":499162500000},{"path":"D:\\phpStudy\\PHPTutorial\\WWW\\vue\\object - 副本\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\phpStudy\\PHPTutorial\\WWW\\vue\\object - 副本\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\phpStudy\\PHPTutorial\\WWW\\vue\\object - 副本\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\phpStudy\\PHPTutorial\\WWW\\vue\\object - 副本\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\phpStudy\\PHPTutorial\\WWW\\vue\\object - 副本\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\phpStudy\\PHPTutorial\\WWW\\vue\\object - 副本\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci51aS1kYXRldGltZXsKICAgIHdpZHRoOiAxMDB2dzsKfQo="},{"version":3,"sources":["ui-datetime.vue"],"names":[],"mappings":";AACA;AACA;AACA","file":"ui-datetime.vue","sourceRoot":"node_modules/vant-ui/components/ui-datetime","sourcesContent":["<style lang=\"scss\" scoped>\n    .ui-datetime{\n        width: 100vw;\n    }\n</style>\n<template>\n    <van-field\n        v-model=\"value\"\n        :label=\"label\"\n        :placeholder=\"placeholder\"\n        :required=\"required\"\n        :disabled=\"disabled\"\n        readonly\n        @focus=\"open()\">\n\n        <!-- 弹出层会插入body -->\n        <template v-slot:button>\n            <div ref=\"popup\">\n                <van-popup v-model=\"popupVisible\" position=\"bottom\" class=\"ui-datetime\" get-container=\"body\">\n                    <van-datetime-picker \n                    ref=\"picker\"\n                    v-model=\"pickerModel\" \n                    :type=\"type\"\n                    :min-date=\"minDate\"\n                    :max-date=\"maxDate\"\n                    :min-hour=\"minHour\"\n                    :max-hour=\"maxHour\"\n                    :min-Minute=\"minMinute\"\n                    :max-Minute=\"maxMinute\"\n                    @confirm=\"confirm\"\n                    @cancel=\"cancel\"/>\n                </van-popup>\n            </div>\n        </template>\n\n    </van-field>\n</template>\n<script>\n    export default {\n        name:'ui-datetime',\n        props:{\n            label:String,//当前页标题\n            type:{\n                type:String,\n                default:'datetime'\n            },\n            value:{\n                type:String,\n            },\n            required:Boolean,\n            disabled:{\n                type:Boolean,\n                default:false\n            },\n            placeholder:{\n                type:String,\n                default:'请选择时间'\n            },\n            minDate:Date,\n            maxDate:Date,\n            minHour:Number,\n            maxHour:Number,\n            minMinute:Number,\n            maxMinute:Number,\n        },\n        data(){\n            return {\n                popupVisible:false,\n                pickerModel:'',\n            }\n        },\n        methods:{\n            open(){\n                //时间组件打开时picker选项定位\n                if (this.value) {\n                    if (this.type==='time') {\n                        // 时间类型无法直接赋值定位\n                        let hour = this.value.split(':')[0]\n                        let minute = this.value.split(':')[1]\n                        this.$refs.picker.$children[0].setValues([hour,minute])\n                    }else {\n                        // 直接赋值定位\n                        this.pickerModel = new Date(this.value);\n                    }\n                }\n                this.popupVisible = true\n            },\n            close(){\n                this.popupVisible = false\n            },\n            confirm(val){\n                // 根据类型确定格式化\n                let formate ='yyyy-MM-dd hh:mm:ss'\n                switch (this.type) {\n                    case 'date':\n                        formate='yyyy-MM-dd'\n                        break;\n                    case 'time':\n                        formate='hh:mm:ss'\n                        break;\n                    case 'year-month':\n                        formate='yyyy-MM'\n                        break;\n                \n                    default:\n                        break;\n                }\n\n                // 将最终输出结果转化为自然时间-字符串\n                let timeStr = ''\n                if (this.type==='time') {\n                    timeStr = val\n                }\n                else  {\n                    timeStr = this.$date(val, formate)\n                }\n\n                // 回显输出\n                this.$emit('input', timeStr)\n\n                this.close()\n                this.$emit('confirm',timeStr)\n            },\n            cancel(){\n                this.close()\n                this.$emit('cancel')\n            }\n        },\n    }\n</script>"]}]}